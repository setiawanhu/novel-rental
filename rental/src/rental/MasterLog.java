/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rental;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.table.DefaultTableModel;
import model.Log;
import model.User;
import repository.LogRepository;

/**
 *
 * @author setiawanhu
 */
public class MasterLog extends javax.swing.JFrame {
    private User authUser;
    /**
     * Flag for sorting the table data
     * 
     */
    private boolean isAsc = false;
    
    /**
     * Creates new form MasterLog
     */
    public MasterLog() {
        initComponents();
        getLogs();
    }
    
    public MasterLog(User authUser){
        initComponents();
        this.authUser = authUser;
        getLogs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblLog = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tblLog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Table Name", "Activity", "Date / Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLogMouseClicked(evt);
            }
        });
        tblLog.getTableHeader().addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent me) {
                int col = tblLog.columnAtPoint(me.getPoint());
                if(col == 2){
                    getLogsByActivity();
                }
            }
        });
        jScrollPane1.setViewportView(tblLog);
        if (tblLog.getColumnModel().getColumnCount() > 0) {
            tblLog.getColumnModel().getColumn(0).setHeaderValue("Username");
            tblLog.getColumnModel().getColumn(1).setHeaderValue("Table Name");
            tblLog.getColumnModel().getColumn(2).setHeaderValue("Activity");
            tblLog.getColumnModel().getColumn(3).setHeaderValue("Date / Time");
        }

        jLabel9.setFont(new java.awt.Font("MyriadSetPro-Semibold Semi-Bold", 1, 36)); // NOI18N
        jLabel9.setText("Master Log");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 385, Short.MAX_VALUE)
                        .addComponent(jLabel9))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dispose();
        new Home(authUser).setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void tblLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLogMouseClicked
        
    }//GEN-LAST:event_tblLogMouseClicked

    /**
     * Retrieve all genre from storage
     * 
     */
    private void getLogs(){
        //Retrieve log list
        ArrayList<Log> logs = LogRepository.findAll();
        
        //Populate the JTable
        DefaultTableModel model = (DefaultTableModel) tblLog.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[4];
        for(int i = 0; i < logs.size(); i++){
            row[0] = logs.get(i).getUsername();
            row[1] = logs.get(i).getTableName();
            row[2] = logs.get(i).getActivity();
            row[3] = logs.get(i).getCreatedAt();
            
            model.addRow(row);
        }
    }

    private void getLogsByActivity(){
        //Retrieve log list
        ArrayList<Log> logs = LogRepository.findAll();
        
        if(isAsc){
            Collections.sort(logs, new SortByActivityDesc());
            isAsc = false;
        }
        else{
            Collections.sort(logs, new SortByActivityAsc());
            isAsc = true;
        }
        
        //Populate the JTable
        DefaultTableModel model = (DefaultTableModel) tblLog.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[4];
        for(int i = 0; i < logs.size(); i++){
            row[0] = logs.get(i).getUsername();
            row[1] = logs.get(i).getTableName();
            row[2] = logs.get(i).getActivity();
            row[3] = logs.get(i).getCreatedAt();
            
            model.addRow(row);
        }
    }
    
    private class SortByActivityAsc implements Comparator<Log>{

        @Override
        public int compare(Log t, Log t1) {
            return t.getActivity().compareTo(t1.getActivity());
        }   
    }
    
    private class SortByActivityDesc implements Comparator<Log>{

        @Override
        public int compare(Log t, Log t1) {
            return -1 * t.getActivity().compareTo(t1.getActivity());
        }   
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MasterLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MasterLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MasterLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MasterLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MasterLog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLog;
    // End of variables declaration//GEN-END:variables
}
